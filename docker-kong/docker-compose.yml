version: '3.9'

x-kong-config: &kong-env
  KONG_DATABASE: ${KONG_DATABASE:-off}
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_HOST: db
  KONG_PG_USER: ${KONG_PG_USER:-kong}
  KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password

x-konga-config: &konga-env
  KONGA_DB_NAME: db_konga
  KONGA_DB_USERNAME: kongauser
  KONGA_DB_PASSWORD: kongapassword
  KONGA_DB_HOST: db
  KONGA_DB_PORT: 5432
  KONGA_TOKEN_SECRET: km1GUr4RkcQDOuYt4JPNXrCuZwcKmqjb

volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  kong_tmp_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs

networks:
  kong-net:
    external: false

services:
  kong-migrations:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    command: kong migrations bootstrap
    profiles: ["database"]
    depends_on:
      - db
    environment:
      <<: *kong-env
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure

  kong-migrations-up:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    command: kong migrations up && kong migrations finish
    profiles: ["database"]
    depends_on:
      - db
    environment:
      <<: *kong-env
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure

  kong:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    user: "${KONG_USER:-kong}"
    environment:
      <<: *kong-env
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "${KONG_PROXY_LISTEN:-0.0.0.0:8000}"
      KONG_ADMIN_LISTEN: "${KONG_ADMIN_LISTEN:-0.0.0.0:8001}"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
      #KONG_HEADERS: "off"
      #KONG_TRUSTED_IPS: "0.0.0.0/0,::/0"
      #KONG_REAL_IP_RECURSIVE: "on"
      #KONG_REAL_IP_HEADER: "X-Forwarded-For"
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    ports:
      - "${KONG_INBOUND_PROXY_LISTEN:-0.0.0.0}:8000:8000/tcp"
      - "${KONG_INBOUND_SSL_PROXY_LISTEN:-0.0.0.0}:8443:8443/tcp"
      - "127.0.0.1:8001:8001/tcp"
      #- "127.0.0.1:8444:8444/tcp"
      #- "127.0.0.1:8002:8002/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./config:/opt/kong
    security_opt:
      - no-new-privileges

  db:
    image: postgres:9.5
    profiles: ["database"]
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data

  konga:
    image: pantsel/konga
    environment:
      <<: *konga-env
      TOKEN_SECRET: ${KONGA_TOKEN_SECRET}
      DB_ADAPTER: ${KONG_DATABASE}
      DB_HOST: ${KONGA_DB_HOST}
      DB_PORT: ${KONGA_DB_PORT}
      DB_DATABASE: ${KONGA_DB_NAME}
      DB_USER: ${KONGA_DB_USERNAME}
      DB_PASSWORD: ${KONGA_DB_PASSWORD}
      NODE_ENV: ${KONGA_ENV}
      KONGA_HOOK_TIMEOUT: 10000
    restart: on-failure
    ports:
    - 1337:1337
    depends_on:
    - db
    networks:
    - kong-net

  my-api:
    image: cpqd/mock/app-api:latest
    networks:
      - kong-net
    ports:
      - "8084:8084"
    security_opt:
      - no-new-privileges

  my-front:
    image: cpqd/mock/app-front:latest
    networks:
      - kong-net
    ports:
      - "8085:80"
    security_opt:
      - no-new-privileges

secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD
